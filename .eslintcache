[{"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\Map\\index.js":"1","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\index.js":"2","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\Index\\index.js":"3","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\News\\index.js":"4","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\Profile\\index.js":"5","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\index.js":"6","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\utils\\getCityInfo.js":"7","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\CityList\\index.js":"8","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\utils\\api.js":"9","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\utils\\url.js":"10","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\components\\SearchBox\\index.js":"11","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\components\\FilterFooter\\index.js":"12","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\Filter\\index.js":"13","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\FilterPicker\\index.js":"14","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\FilterTitle\\index.js":"15","D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\FilterMore\\index.js":"16"},{"size":8356,"mtime":1606621255395,"results":"17","hashOfConfig":"18"},{"size":274,"mtime":1606390427688,"results":"19","hashOfConfig":"18"},{"size":5352,"mtime":1606634657473,"results":"20","hashOfConfig":"18"},{"size":202,"mtime":1606222288863,"results":"21","hashOfConfig":"18"},{"size":218,"mtime":1606222313892,"results":"22","hashOfConfig":"18"},{"size":579,"mtime":1606634321329,"results":"23","hashOfConfig":"18"},{"size":933,"mtime":1606620814305,"results":"24","hashOfConfig":"18"},{"size":5715,"mtime":1606618974839,"results":"25","hashOfConfig":"18"},{"size":235,"mtime":1606621065145,"results":"26","hashOfConfig":"18"},{"size":75,"mtime":1606620508360,"results":"27","hashOfConfig":"18"},{"size":1181,"mtime":1606623662600,"results":"28","hashOfConfig":"18"},{"size":897,"mtime":1561599781702,"results":"29","hashOfConfig":"18"},{"size":2809,"mtime":1606788869409,"results":"30","hashOfConfig":"18"},{"size":1939,"mtime":1606788851378,"results":"31","hashOfConfig":"18"},{"size":889,"mtime":1606641533212,"results":"32","hashOfConfig":"18"},{"size":1270,"mtime":1606653101805,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"10pp8i6",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\Map\\index.js",["72"],"import { Component } from \"react\";\r\nimport styles from './index.module.scss'\r\nimport NavHeader from '../../components/NavHeader'\r\nimport getCurrentCity from '../../utils/getCityInfo'\r\n// import axios from \"axios\";\r\n\r\nimport API  from '../../utils/api';\r\nimport  BASE_URL from '../../utils/url';\r\n\r\nimport { Toast } from \"antd-mobile\";\r\n\r\n// 原型覆盖物的样式\r\nconst cicleStyle = {\r\n    color: '#fff',\r\n    borderRadius: '50%',\r\n    borderColor: '#fff',\r\n    borderSize: '1px',\r\n    backgroundColor: '#24b96b',\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '70px',\r\n    height: '70px',\r\n    fontSize: '12px',\r\n    fontFamily: '微软雅黑'\r\n}\r\n\r\n// 方形覆盖物样式\r\nconst rectStyle = {\r\n    color: '#fff',\r\n    backgroundColor: '#24b96b',\r\n    border: 'none',\r\n    padding: '0 10px',\r\n    height: '20px',\r\n    lineHeight: '20px',\r\n    fontSize: '12px',\r\n    fontFamily: '微软雅黑'\r\n}\r\n\r\nexport default class Map extends Component {\r\n    state = {\r\n        houselist: [],\r\n        show: false\r\n    }\r\n    // 获取下一下需要展示的地图缩放级别\r\n    getTypeAndNextZoom() {\r\n        // 获取当前地图缩放级别\r\n        let zoom = this.map.getZoom()\r\n        let nextZoom\r\n        // 区 zoom  -> 11     nextZoom 13  type circle  zoom 11   10<zoom < 12\r\n        // 镇 zoom  -> 13     nextZoom 15  type rect zoom 11   12 <zoom < 14\r\n        // 小区 zoom -> 15    14 <zoom < 16\r\n        if (zoom > 12) {\r\n            nextZoom = 15\r\n        } else if (10 < zoom < 12) {\r\n            nextZoom = 13\r\n        } else {\r\n            nextZoom = 11\r\n        }\r\n        // console.log(nextZoom);\r\n        return {\r\n            nextZoom,\r\n        }\r\n    }\r\n\r\n    // 根据传递过来的城市id获取房源信息\r\n    async renderOverlays() {\r\n        // 根据获取到的房源信息渲染覆盖物\r\n        this.createOverlays(this.mapList)\r\n\r\n        // 关闭动画\r\n        Toast.hide()\r\n    }\r\n\r\n    // 加载地图\r\n    async getMap() {\r\n\r\n        // 开启loading动画\r\n        Toast.loading('加载中...', 0, null, false)\r\n\r\n        // 发送请求获取房源信息\r\n        let { label, value } = await getCurrentCity()\r\n        let res = await API.get(`/area/map?id=${value}`)\r\n        this.mapList = res.data.body\r\n\r\n        var map = new window.BMap.Map(\"container\");\r\n        this.map = map\r\n\r\n        //创建地址解析器实例\r\n        var myGeo = new window.BMap.Geocoder();\r\n        // 将地址解析结果显示在地图上，并调整地图视野\r\n        myGeo.getPoint(label, (point) => {\r\n            if (point) {\r\n                map.centerAndZoom(point, 11);\r\n\r\n                // 添加地图控件\r\n                map.addControl(new window.BMap.NavigationControl());\r\n                map.addControl(new window.BMap.ScaleControl());\r\n\r\n                // 传递城市名字获取房源信息\r\n                this.renderOverlays();\r\n\r\n                // map.addControl(new window.BMap.OverviewMapControl());\r\n\r\n\r\n                // map.addOverlay(new window.BMapGL.Marker(point, { title: label }))\r\n            } else {\r\n                alert('您选择的地址没有解析到结果！');\r\n            }\r\n        }, label)\r\n    }\r\n\r\n    // 创建覆盖物\r\n    createOverlays(mapList) {\r\n        let { nextZoom } = this.getTypeAndNextZoom()\r\n        // console.log(nextZoom)\r\n        mapList.forEach(item => {\r\n            let { label: name, count, value, coord: { longitude, latitude } } = item\r\n            let labelPoint = new window.BMap.Point(longitude, latitude)\r\n\r\n            var opts = {\r\n                position: labelPoint, // 指定文本标注所在的地理位置\r\n                offset: new window.BMap.Size(-60, -10) // 设置文本偏移量\r\n            };\r\n            let zoom = this.map.getZoom()\r\n            // 判断应该显示的样式\r\n            if (zoom !== 15) {\r\n                // 创建文本标注对象\r\n                var label = new window.BMap.Label(`<div className=\"${styles.rectStyle}\">${name}<br/>${count}套</div>`, opts);\r\n                // label.setContent(`<p>${item.label}</p><p>${item.count}<p/>`)\r\n\r\n                // 自定义文本标注样式\r\n                label.setStyle(cicleStyle);\r\n                // 给绘制点添加点击事件\r\n\r\n                label.addEventListener('click', () => {\r\n                    // 开启动画\r\n                    Toast.loading('加载中...', 0, null, false)\r\n                    // 地图发生移动\r\n                    // map.panTo(labelPoint)\r\n                    // 放大地图\r\n                    // map.setZoom(13)\r\n                    this.map.centerAndZoom(labelPoint, nextZoom);\r\n                    // 清除原来的覆盖物\r\n                    setTimeout(() => {\r\n                        this.map.clearOverlays()\r\n                    }, 0)\r\n                    // 请求镇的数据，渲染成覆盖物\r\n                    API.get(`/area/map?id=${value}`).then(res => {\r\n                        let mapList = res.data.body\r\n                        this.createOverlays(mapList)\r\n                    })\r\n\r\n                })\r\n            } else {\r\n                // 创建文本标注对象\r\n                var label = new window.BMap.Label(`\r\n                    <div>${name.substring(0, 4)}...${count}套</div>\r\n                    <i class=\"${styles.traingle}\"></i>\r\n                `, opts);\r\n                // label.setContent(`<p>${item.label}</p><p>${item.count}<p/>`)\r\n\r\n                // 自定义文本标注样式\r\n                label.setStyle(rectStyle);\r\n                // 给绘制点添加点击事件\r\n                label.addEventListener('click', () => {\r\n                    // 移动到中心点\r\n                    this.map.panTo(labelPoint)\r\n                    // 开启动画\r\n                    Toast.loading('加载中...', 0, null, false)\r\n\r\n                    API.get(`/houses?cityId=${value}`).then(res => {\r\n                        Toast.hide()\r\n                        let { list } = res.data.body\r\n                        this.setState({\r\n                            houselist: list,\r\n                            show: true\r\n                        })\r\n                        // console.log(list);\r\n                    })\r\n                })\r\n\r\n                this.map.addEventListener('dragstart',()=>{\r\n                    this.setState({\r\n                        show: false\r\n                    })\r\n                })\r\n            }\r\n\r\n            this.map.addOverlay(label)\r\n            Toast.hide()\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMap()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.mapWrapper}>\r\n                <NavHeader>地图找房</NavHeader>\r\n                <div id=\"container\"></div>\r\n\r\n                <div className={[styles.housearea, this.state.show ? styles.show : ''].join(' ')}>\r\n                    <div className={styles.title}>\r\n                        <h3>房源列表</h3>\r\n                        <div>更多房源</div>\r\n                    </div>\r\n\r\n                    <div className={styles.houselist}>\r\n                        {this.state.houselist.length ? this.state.houselist.map(item => (\r\n                            <div className={styles.houseItem} key={item.houseCode}>\r\n                                <img src={`${BASE_URL}${item.houseImg}`}  alt=\"\"/>\r\n                                <div className={styles.houseRight}>\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.desc}</p>\r\n                                    <div>\r\n                                        {item.tags[0] ? <span className={styles.houseTag1}>{item.tags[0]}</span> : ''}\r\n                                        {item.tags[1] ? <span className={styles.houseTag2}>{item.tags[1]}</span> : ''}\r\n                                    </div>\r\n                                    <div className={styles.price}>\r\n                                        <span>{item.price}</span> 元/月\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )) : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",["73","74"],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\index.js",[],["75","76"],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\Index\\index.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\News\\index.js",[],["77","78"],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\Profile\\index.js",[],["79","80"],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\index.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\utils\\getCityInfo.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\CityList\\index.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\utils\\api.js",[],["81","82"],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\utils\\url.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\components\\SearchBox\\index.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\components\\FilterFooter\\index.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\Filter\\index.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\FilterPicker\\index.js",["83","84","85"],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\FilterTitle\\index.js",[],"D:\\前端开发\\线下黑马学习\\09-React\\day01\\hkzf_react\\src\\pages\\HouseList\\components\\FilterMore\\index.js",[],{"ruleId":"86","severity":1,"message":"87","line":158,"column":21,"nodeType":"88","messageId":"89","endLine":158,"endColumn":26},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"92","replacedBy":"97"},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"90","replacedBy":"100"},{"ruleId":"92","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":7,"nodeType":"88","messageId":"104","endLine":7,"endColumn":15},{"ruleId":"102","severity":1,"message":"105","line":92,"column":13,"nodeType":"88","messageId":"104","endLine":92,"endColumn":19},{"ruleId":"102","severity":1,"message":"106","line":92,"column":21,"nodeType":"88","messageId":"104","endLine":92,"endColumn":29},"no-redeclare","'label' is already defined.","Identifier","redeclared","no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],["107"],["108"],["107"],["108"],["107"],["108"],"no-unused-vars","'province' is assigned a value but never used.","unusedVar","'onSave' is assigned a value but never used.","'onCancel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]